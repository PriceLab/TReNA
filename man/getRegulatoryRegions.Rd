% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HumanDHSFilter.R
\name{getRegulatoryRegions,HumanDHSFilter-method}
\alias{getRegulatoryRegions,HumanDHSFilter-method}
\alias{getRegulatoryRegions}
\title{Get a table of regulatory regions for a Human DHS filter}
\usage{
\S4method{getRegulatoryRegions}{HumanDHSFilter}(
  obj,
  encode.table.name,
  chromosome,
  start,
  end,
  score.threshold = 0
)
}
\arguments{
\item{obj}{An object of class HumanDHSFilter}

\item{encode.table.name}{A vector of names for Encode tables}

\item{chromosome}{The chromosome of interest}

\item{start}{The starting position}

\item{end}{The ending position}

\item{score.threshold}{A threshold for the score (default = 200)}
}
\value{
A data frame containing the regulatory regions for the filter, including the
chromosome, start, and end positions, plus the count and score of each region.
}
\description{
Get a table of regulatory regions for a Human DHS filter
}
\examples{
\dontrun{
# Make a filter for "transcription, DNA-templated" and use it to filter candidates
load(system.file(package="trena", "extdata/ampAD.154genes.mef2cTFs.278samples.RData"))
targetGene <- "VRK2"
promoter.length <- 1000
genomeName <- "hg38"
db.address <- system.file(package="trena", "extdata")
genome.db.uri    <- paste("sqlite:/", db.address, "vrk2.neighborhood.hg38.gtfAnnotation.db",  sep = "/")
jaspar.human <- as.list(query(query(MotifDb, "sapiens"),"jaspar2016"))

# Grab regions for VRK2 using shoulder size of 1000
trena <- Trena(genomeName)
tbl.regions <- getProximalPromoter(trena, "VRK2", 1000, 1000)

hd.filter <- HumanDHSFilter(genomeName, pwmMatchPercentageThreshold = 85,
geneInfoDatabase.uri = genome.db.uri, regions = tbl.regions, pfms = jaspar.human)

chrom <- "chr2"
rs13384219.loc <- 57907323
start <- rs13384219.loc - 10
end <- rs13384219.loc + 10

tableNames <- getEncodeRegulatoryTableNames(hd.filter)

getRegulatoryRegions(hd.filter, tableNames[1], chrom, start, end)
}
}
\seealso{
\code{\link{HumanDHSFilter}}
}
