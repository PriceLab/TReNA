% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HumanDHSFilter.R
\name{getRegulatoryRegions}
\alias{getRegulatoryRegions}
\title{Get a tabel of regulatory regions for a Human DHS filter}
\usage{
getRegulatoryRegions(obj, encode.table.name, chromosome, start, end,
  score.threshold = 200, quiet = TRUE)
}
\arguments{
\item{obj}{An object of class HumanDHSFilter}

\item{encode.table.name}{A vector of names for Encode tables}

\item{chromosome}{The chromosome of interest}

\item{start}{The starting position}

\item{end}{The ending position}

\item{score.threshold}{A threshold for the score (default = 200)}

\item{quiet}{A logical indicating whether the method should print output}
}
\value{
A data frame containing the regulatory regions for the filter, including the
chromosome, start, and end positions, plus the count and score of each region.
}
\description{
Get a tabel of regulatory regions for a Human DHS filter
}
\examples{

# Make a filter for "transcription, DNA-templated" and use it to filter candidates
load(system.file(package="trena", "extdata/ampAD.154genes.mef2cTFs.278samples.RData"))
targetGene <- "VRK2"
promoter.length <- 1000
genome <- "hg38"
db.address <- system.file(package="trena", "extdata")
genome.db.uri    <- paste("sqlite:/", db.address, "vrk2.genome.db",  sep = "/")

# Grab regions for VRK2 using shoulder size of 1000
trena <- Trena(genome)
tbl.regions <- getProximalPromoter(trena, "VRK2", 1000, 1000)

hd.filter <- HumanDHSFilter(genome, pwmMatchPercentageThreshold = 85,
geneInfoDatabase.uri = genome.db.uri, regions = tbl.regions)

chrom <- "chr2"
rs13384219.loc <- 57907323
start <- rs13384219.loc - 10
end <- rs13384219.loc + 10

tableNames <- getEncodeRegulatoryTableNames(hd.filter)

getRegulatoryRegions(hd.filter, tableNames[1], chrom, start, end)
}
\seealso{
\code{\link{HumanDHSFilter}}
}
