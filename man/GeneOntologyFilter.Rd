% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GeneOntologyFilter.R
\name{GeneOntologyFilter}
\alias{GeneOntologyFilter}
\title{Create a CandidateFilter using Gene Ontology}
\usage{
GeneOntologyFilter(organismDatabase = org.Hs.eg.db::org.Hs.eg.db,
  GOTerm = "GO:0006351", quiet = TRUE)
}
\arguments{
\item{organismDatabase}{An organism-specific database of type 'OrgDb'}

\item{quiet}{A logical denoting whether or not the solver should print output}

\item{candidateRegulators}{The designated set of transcription factors that could be associated
with the target gene}

\item{regulatorWeights}{A set of weights on the transcription factors
(default = rep(1, length(candidateRegulators)))}
}
\value{
A Solver class object with Random Forest as the solver
}
\description{
Create a CandidateFilter using Gene Ontology
}
\examples{
load(system.file(package="trena", "extdata/ampAD.154genes.mef2cTFs.278samples.RData"))
targetGene <- "MEF2C"
candidateRegulators <- setdiff(rownames(mtx.sub), targetGene)
rf.solver <- RandomForestSolver(mtx.sub, targetGene, candidateRegulators)
}
\seealso{
\code{\link{solve.RandomForest}}, \code{\link{getAssayData}}

Other Solver class objects: \code{\link{BayesSpikeSolver}},
  \code{\link{EnsembleSolver}},
  \code{\link{LassoPVSolver}}, \code{\link{LassoSolver}},
  \code{\link{PearsonSolver}},
  \code{\link{RandomForestSolver}},
  \code{\link{RidgeSolver}}, \code{\link{Solver-class}},
  \code{\link{SpearmanSolver}},
  \code{\link{SqrtLassoSolver}}
}
